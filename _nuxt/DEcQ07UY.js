import{r as h}from"./CDRs11_G.js";import{u as l}from"./lvShBcCt.js";function b(t){const o=/^(?:(http(?:s?)?:\/\/)?github.com\/)?([^\/]+)\/([^\/]+)\/?.*$/,e=t.match(o);if(!e)return null;const[,i="https://",r,n]=e;return!r||!n?null:`https://github.com/${r}/${n}`}function f(t){const o=/^(?:https?:\/\/)?(?:www\.)?github\.com\/([^/]+)\/([^/]+)(?:\/)?$/,e=t.match(o);if(!e)throw new Error("Invalid GitHub URL format: "+t);const[,i,r]=e;return{githubUrl:t,githubRepo:`${i}/${r}`,githubOwner:i,githubName:r}}async function g(t,o,e="HEAD"){const i=`https://api.github.com/repos/${t}/${o}/zipball/${e}`,r=`https://api.github.com/repos/${t}/${o}/zipball/${e}`;let n;try{n=await $fetch(`https://www.newrecruit.eu/api/proxy?url=${encodeURIComponent(i)}`)}catch{n=await $fetch(`https://www.newrecruit.eu/api/proxy?url=${encodeURIComponent(r)}`)}const s=await l(n),c=Object.entries(s.entries),u=c[0][0];return c.map(([p,a])=>[h(p,u),a])}export{g as getRepoZip,b as normalizeGithubRepoUrl,f as parseGitHubUrl};
//# sourceMappingURL=DEcQ07UY.js.map

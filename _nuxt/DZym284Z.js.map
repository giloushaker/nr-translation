{"version":3,"file":"DZym284Z.js","sources":["../../../../../../../pages/translate/[system]/[lang].vue"],"sourcesContent":["<template>\n  <div class=\"translate-container\">\n    <LoadingOverlay title=\"Loading Translation Data\" />\n    <NuxtPage v-if=\"!loadingStore.isLoading && isTranslationDataReady\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useLoadingStore } from \"~/stores/loadingStore\";\nimport { useTranslationStore } from \"~/stores/translationStore\";\n\n// Ensure this parent route is also kept alive\ndefinePageMeta({\n  keepalive: true,\n});\n\nconst route = useRoute();\nconst router = useRouter();\nconst loadingStore = useLoadingStore();\nconst translationStore = useTranslationStore();\n\nconst isTranslationDataReady = ref(false);\n\nconst loadTranslationData = async (updateProgress: (progress: number, message?: string) => void): Promise<void> => {\n  try {\n    updateProgress(20, \"Loading translation strings...\");\n    await translationStore.ensureTranslationsLoaded(\n      route.params.system as string,\n      route.params.lang as string,\n      (progress, message) => {\n        updateProgress(20 + Math.floor(progress * 0.75), message);\n      }\n    );\n    updateProgress(100, \"Translation data loaded!\");\n  } catch (error) {\n    console.error(\"Failed to load translation data:\", error);\n    throw error;\n  }\n};\n\nconst initializeTranslationPage = async () => {\n  // Get system and language from route\n  const systemId = route.params.system as string;\n  const languageCode = route.params.lang as string;\n\n  // Only redirect if we're actually on a translate route but missing parameters\n  const isTranslateRoute = route.path.includes(\"/translate/\");\n  if (isTranslateRoute && (!systemId || !languageCode)) {\n    console.log(\"Redirecting to home due to missing params on translate route\");\n    await router.push(\"/\");\n    return;\n  }\n\n  // If we're not on a translate route, don't try to load translation data\n  if (!isTranslateRoute) {\n    isTranslationDataReady.value = true;\n    return;\n  }\n\n  try {\n    await loadingStore.withLoading(async (updateProgress) => {\n      // Load translation data - this handles both NewRecruit and BSData systems\n      await loadTranslationData(updateProgress);\n\n      // Auto-sync from backend if available\n      if (translationStore.canSync) {\n        updateProgress(95, \"Syncing from backend...\");\n        try {\n          await translationStore.syncFromBackend(systemId, languageCode, \"client-wins\");\n          console.log(\"Auto-sync completed successfully\");\n        } catch (error) {\n          console.warn(\"Auto-sync failed:\", error);\n          // Don't show error to user for auto-sync, it's not critical\n        }\n      }\n\n      // Small delay to show completion\n      await new Promise((resolve) => setTimeout(resolve, 300));\n    }, \"Initializing...\");\n\n    isTranslationDataReady.value = true;\n  } catch (error) {\n    console.error(\"Failed to initialize translation page:\", error);\n    // Handle error - redirect to home if system doesn't exist\n    await router.push(\"/\");\n  }\n};\n\nonMounted(() => {\n  initializeTranslationPage();\n});\n\n// Watch for route changes to handle keepalive navigation\n// Only watch system and lang params, not the full path\nwatch(\n  () => [route.params.system, route.params.lang],\n  async ([newSystem, newLang], [oldSystem, oldLang] = []) => {\n    // Only react if system or language actually changed AND we're on a translate route\n    const paramsChanged = newSystem !== oldSystem || newLang !== oldLang;\n    const isOnTranslateRoute = route.path.includes(\"/translate/\");\n\n    if (paramsChanged && isOnTranslateRoute && oldSystem !== undefined) {\n      console.log(\"System/Language changed:\", {\n        from: [oldSystem, oldLang],\n        to: [newSystem, newLang],\n      });\n      isTranslationDataReady.value = false;\n      await initializeTranslationPage();\n    }\n  }\n);\n</script>\n\n<style scoped>\n.translate-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"],"names":["route","useRoute","router","useRouter","loadingStore","useLoadingStore","translationStore","useTranslationStore","isTranslationDataReady","ref","loadTranslationData","updateProgress","progress","message","error","initializeTranslationPage","systemId","languageCode","isTranslateRoute","resolve","onMounted","watch","newSystem","newLang","oldSystem","oldLang","paramsChanged","isOnTranslateRoute","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_LoadingOverlay","_unref","_createBlock","_component_NuxtPage"],"mappings":"4QAkBA,MAAMA,EAAQC,EAAA,EACRC,EAASC,EAAA,EACTC,EAAeC,EAAA,EACfC,EAAmBC,EAAA,EAEnBC,EAAyBC,EAAI,EAAK,EAElCC,EAAsB,MAAOC,GAAgF,CACjH,GAAI,CACFA,EAAe,GAAI,gCAAgC,EACnD,MAAML,EAAiB,yBACrBN,EAAM,OAAO,OACbA,EAAM,OAAO,KACb,CAACY,EAAUC,IAAY,CACrBF,EAAe,GAAK,KAAK,MAAMC,EAAW,GAAI,EAAGC,CAAO,CAC1D,CAAA,EAEFF,EAAe,IAAK,0BAA0B,CAChD,OAASG,EAAO,CACd,cAAQ,MAAM,mCAAoCA,CAAK,EACjDA,CACR,CACF,EAEMC,EAA4B,SAAY,CAE5C,MAAMC,EAAWhB,EAAM,OAAO,OACxBiB,EAAejB,EAAM,OAAO,KAG5BkB,EAAmBlB,EAAM,KAAK,SAAS,aAAa,EAC1D,GAAIkB,IAAqB,CAACF,GAAY,CAACC,GAAe,CACpD,QAAQ,IAAI,8DAA8D,EAC1E,MAAMf,EAAO,KAAK,GAAG,EACrB,MACF,CAGA,GAAI,CAACgB,EAAkB,CACrBV,EAAuB,MAAQ,GAC/B,MACF,CAEA,GAAI,CACF,MAAMJ,EAAa,YAAY,MAAOO,GAAmB,CAKvD,GAHA,MAAMD,EAAoBC,CAAc,EAGpCL,EAAiB,QAAS,CAC5BK,EAAe,GAAI,yBAAyB,EAC5C,GAAI,CACF,MAAML,EAAiB,gBAAgBU,EAAUC,EAAc,aAAa,EAC5E,QAAQ,IAAI,kCAAkC,CAChD,OAASH,EAAO,CACd,QAAQ,KAAK,oBAAqBA,CAAK,CAEzC,CACF,CAGA,MAAM,IAAI,QAASK,GAAY,WAAWA,EAAS,GAAG,CAAC,CACzD,EAAG,iBAAiB,EAEpBX,EAAuB,MAAQ,EACjC,OAASM,EAAO,CACd,QAAQ,MAAM,yCAA0CA,CAAK,EAE7D,MAAMZ,EAAO,KAAK,GAAG,CACvB,CACF,EAEA,OAAAkB,EAAU,IAAM,CACdL,EAAA,CACF,CAAC,EAIDM,EACE,IAAM,CAACrB,EAAM,OAAO,OAAQA,EAAM,OAAO,IAAI,EAC7C,MAAO,CAACsB,EAAWC,CAAO,EAAG,CAACC,EAAWC,CAAO,EAAI,KAAO,CAEzD,MAAMC,EAAgBJ,IAAcE,GAAaD,IAAYE,EACvDE,EAAqB3B,EAAM,KAAK,SAAS,aAAa,EAExD0B,GAAiBC,GAAsBH,IAAc,SACvD,QAAQ,IAAI,2BAA4B,CACtC,KAAM,CAACA,EAAWC,CAAO,EACzB,GAAI,CAACH,EAAWC,CAAO,CAAA,CACxB,EACDf,EAAuB,MAAQ,GAC/B,MAAMO,EAAA,EAEV,CAAA,wBA9GA,OAAAa,EAAA,EAAAC,EAGM,MAHNC,EAGM,CAFJC,EAAmDC,EAAA,CAAnC,MAAM,2BAA0B,GAC/BC,EAAA7B,CAAA,EAAa,WAAaI,EAAA,WAA3C0B,EAAqEC,EAAA,CAAA,IAAA,CAAA,CAAA"}
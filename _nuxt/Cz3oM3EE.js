const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./BBRP_Fbp.js","./PIpq5hpi.js","./entry.Dw3NmsKx.css"])))=>i.map(i=>d[i]);
import{W as y,S as p}from"./PIpq5hpi.js";class b{getSystems(){throw new Error("Method not implemented.")}getStats(a){throw new Error("Method not implemented.")}async sync(a,t){return[]}async submit(a,t,s){}isAvailable(){return!1}}class w{constructor(a){this.file=a}async sync(a,t){const s=await this.file.text();try{return this.file.name.endsWith(".json")?this.parseJsonFile(s):this.file.name.endsWith(".po")?this.parsePoFile(s):this.file.name.endsWith(".csv")?this.parseCsvFile(s):this.parseJsonFile(s)}catch(n){throw new Error(`Failed to parse file: ${n.message}`)}}parseJsonFile(a){const t=JSON.parse(a);if(t.translations&&Array.isArray(t.translations))return t.translations;if(typeof t=="object")return Object.entries(t).map(([s,n])=>({id:"",key:s,original:s,translation:n,translated:!0,catalogue:"imported",modified:!1}));throw new Error("Unrecognized JSON format")}parsePoFile(a){const t=[],s=a.split(`
`);let n={};for(const o of s){const r=o.trim();r.startsWith("msgid ")?(n.msgid&&n.msgstr&&t.push({id:"",key:n.msgid,original:n.msgid,translation:n.msgstr,translated:!!n.msgstr,catalogue:"imported",modified:!1}),n={msgid:r.slice(7,-1)}):r.startsWith("msgstr ")&&(n.msgstr=r.slice(8,-1))}return n.msgid&&n.msgstr&&t.push({id:"",key:n.msgid,original:n.msgid,translation:n.msgstr,translated:!!n.msgstr,catalogue:"imported",modified:!1}),t}parseCsvFile(a){const t=a.split(`
`),s=[],n=t[0]?.includes("Original")?1:0;for(let o=n;o<t.length;o++){const r=t[o]?.trim();if(!r)continue;const i=this.parseCsvLine(r);i.length>=2&&s.push({id:"",key:i[0],original:i[0],translation:i[1],translated:!!i[1],catalogue:i[2]||"imported",modified:!1})}return s}parseCsvLine(a){const t=[];let s="",n=!1;for(let o=0;o<a.length;o++){const r=a[o];r==='"'?n&&a[o+1]==='"'?(s+='"',o++):n=!n:r===","&&!n?(t.push(s),s=""):s+=r}return t.push(s),t}async submit(a,t,s){throw new Error("File backend does not support submission")}isAvailable(){return!0}getSystems(){throw new Error("File backend does not support system listing")}getStats(a){throw new Error("File backend does not support stats")}}const k=y("translation",{state:()=>({strings:{},catalogues:[],translations:[],isLoaded:!1,currentSystemId:null,totalStrings:0,translatedCount:0,backend:new b,translationSource:null,isSyncing:!1,isSubmitting:!1,lastSyncTime:null,lastSubmitTime:null}),getters:{systemStringCount:e=>e.totalStrings,systemName:e=>e.translationSource?.getName()||"Unknown System",getCatalogueById:e=>a=>e.catalogues.find(t=>t.id===a),getTranslationByKey:e=>a=>e.translations.find(t=>t.key===a),getTranslationsByStatus:e=>a=>e.translations.filter(t=>t.translated===a),canSync:e=>e.backend.isAvailable()&&!e.isSyncing,canSubmit:e=>e.backend.isAvailable()&&!e.isSubmitting},actions:{getStorageKey(e,a){return`${e}-${a}`},async dbOpen(){return new Promise((e,a)=>{const t=indexedDB.open("nr-translations",2);t.onerror=()=>a(t.error),t.onsuccess=()=>e(t.result),t.onupgradeneeded=s=>{const n=s.target.result;n.objectStoreNames.contains("translations")&&n.deleteObjectStore("translations");const o=n.createObjectStore("translations",{keyPath:"compositeKey"});o.createIndex("systemLanguage","systemLanguage",{unique:!1}),o.createIndex("systemId","systemId",{unique:!1})}})},async dbPutRecord(e){const s=(await this.dbOpen()).transaction(["translations"],"readwrite").objectStore("translations");return new Promise((n,o)=>{const r=s.put(e);r.onsuccess=()=>n(),r.onerror=()=>o(r.error)})},async dbGetByIndex(e,a){const o=(await this.dbOpen()).transaction(["translations"],"readonly").objectStore("translations").index(e);return new Promise((r,i)=>{const l=[],u=o.openCursor(IDBKeyRange.only(a));u.onsuccess=d=>{const h=d.target.result;h?(l.push(h.value),h.continue()):r(l)},u.onerror=()=>i(u.error)})},async dbDeleteByIndex(e,a){const o=(await this.dbOpen()).transaction(["translations"],"readwrite").objectStore("translations").index(e);return new Promise((r,i)=>{const l=o.openCursor(IDBKeyRange.only(a));l.onsuccess=u=>{const d=u.target.result;d?(d.delete(),d.continue()):r()},l.onerror=()=>i(l.error)})},async saveTranslationsToLocal(e,a,t){const s=t??this.translations.filter(o=>o.translated),n=`${e}-${a}`;try{await this.dbDeleteByIndex("systemLanguage",n);for(const o of s){const r={compositeKey:`${e}-${a}-${o.key}`,systemId:e,languageCode:a,systemLanguage:n,key:o.key,translation:o.translation,catalogue:o.catalogue,modified:o.modified,lastSaved:Date.now()};await this.dbPutRecord(r)}}catch(o){console.warn("Failed to save translations to IndexedDB:",o)}},async loadTranslationsFromLocal(e,a){const t=`${e}-${a}`;try{const s=await this.dbGetByIndex("systemLanguage",t);if(s.length===0)return!1;const n=new Map(this.translations.map(r=>[r.key,r]));s.forEach(r=>{const i=n.get(r.key);i&&(i.translation=r.translation||"",i.translated=!0,i.modified=r.modified||!1)});const o=new Map(this.translations.map(r=>[r.key,r]));return this.catalogues.forEach(r=>{r.strings.forEach(i=>{const l=o.get(i.key);l&&(i.translation=l.translation,i.translated=l.translated,i.modified=l.modified)})}),this.translatedCount=this.translations.filter(r=>r.translated).length,!0}catch(s){return console.warn("Failed to load translations from IndexedDB:",s),!1}},async clearLocalTranslations(e,a){const t=`${e}-${a}`;try{await this.dbDeleteByIndex("systemLanguage",t)}catch(s){console.warn("Failed to clear translations from IndexedDB:",s)}},async loadTranslationsFromSource(e,a,t){const s=e.getId();if(!(this.isLoaded&&this.currentSystemId===s))try{this.translationSource=e,this.currentSystemId=s;const{strings:n,catalogues:o,translations:r}=await this.translationSource.getTranslations(a||"en",t);this.strings=n,globalThis.strings=n,this.catalogues=o,this.translations=r,globalThis.translations=r,this.totalStrings=r.length,this.translatedCount=r.filter(i=>i.translated).length,this.isLoaded=!0,this.translationSource=e,a&&await this.loadTranslationsFromLocal(s,a)}catch(n){throw console.error("Failed to load translations:",n),n}},async ensureTranslationsLoaded(e,a,t){if(this.isLoaded&&this.currentSystemId===e)return;this.clearCache();const{createTranslationSourceForSystem:s}=await p(async()=>{const{createTranslationSourceForSystem:o}=await import("./BBRP_Fbp.js");return{createTranslationSourceForSystem:o}},__vite__mapDeps([0,1,2]),import.meta.url),n=s(e);await this.loadTranslationsFromSource(n,a,t),this.currentSystemId=e},updateTranslation(e,a,t,s){const n=this.translations.find(o=>o.id===e);if(n){n.translation=a,n.modified=!0,n.translated=a.trim()!=="",this.translatedCount=this.translations.filter(r=>r.translated).length;const o=this.catalogues.find(r=>r.id===n.catalogue);if(o){const r=o.strings.find(i=>i.id===e);r&&(r.translation=a,r.modified=!0,r.translated=n.translated)}t&&s&&this.saveTranslationsToLocal(t,s,[n])}},clearCache(){this.strings={},this.catalogues=[],this.translations=[],this.isLoaded=!1,this.currentSystemId=null,this.translationSource=null,this.totalStrings=0,this.translatedCount=0,globalThis.strings={},globalThis.translations=[]},setBackend(e){this.backend=e},getCurrentTranslationSource(){return this.translationSource},async syncFromFile(e,a,t,s="ask-user"){const o=await new w(e).sync(a,t);return await this.syncTranslations(o,a,t,s)},async syncFromBackend(e,a,t="ask-user"){if(!this.backend.isAvailable())throw new Error("No backend configured");const s=await this.backend.sync(e,a);return await this.syncTranslations(s,e,a,t)},async syncTranslations(e,a,t,s="ask-user"){if(this.isSyncing)throw new Error("Sync already in progress");this.isSyncing=!0;try{if(e.length===0)return this.lastSyncTime=Date.now(),{conflicts:[]};const n=new Map(this.translations.map(i=>[i.key,i])),o=[],r=[];if(e.forEach(i=>{const l=n.get(i.key);l&&(l.modified&&l.translation!==i.translation&&l.translation.trim()!==""&&i.translation.trim()!==""?o.push({key:i.key,original:l.original,local:l.translation,server:i.translation}):r.push({local:l,server:i}))}),r.forEach(({local:i,server:l})=>{i.translation=l.translation,i.translated=l.translated,i.modified=!1}),o.length>0){if(s==="server-wins")o.forEach(i=>{const l=n.get(i.key);l&&(l.translation=i.server,l.translated=!0,l.modified=!1)});else if(s!=="client-wins"){if(s==="ask-user")return{conflicts:o}}}return this.updateCataloguesFromTranslations(),this.translatedCount=this.translations.filter(i=>i.translated).length,await this.saveTranslationsToLocal(a,t),this.lastSyncTime=Date.now(),{conflicts:s==="ask-user"?o:[]}}finally{this.isSyncing=!1}},updateCataloguesFromTranslations(){const e=new Map(this.translations.map(a=>[a.key,a]));this.catalogues.forEach(a=>{a.strings.forEach(t=>{const s=e.get(t.key);s&&(t.translation=s.translation,t.translated=s.translated,t.modified=s.modified)})})},resolveConflicts(e){const a=new Map(this.translations.map(t=>[t.key,t]));e.forEach(t=>{const s=a.get(t.key);s&&t.choice==="server"&&(s.translation=t.server,s.translated=!0,s.modified=!1)}),this.updateCataloguesFromTranslations(),this.translatedCount=this.translations.filter(t=>t.translated).length},async submitToBackend(e,a,t=!0){if(!this.backend.isAvailable())throw new Error("No backend configured");if(this.isSubmitting)throw new Error("Submit already in progress");this.isSubmitting=!0;try{let s=this.translations.filter(n=>n.translated&&n.translation.trim()!=="");if(t&&(s=s.filter(n=>n.modified)),s.length>0){await this.backend.submit(e,a,s),s.forEach(o=>{o.modified=!1});const n=new Map(this.translations.map(o=>[o.key,o]));this.catalogues.forEach(o=>{o.strings.forEach(r=>{const i=n.get(r.key);i&&(r.modified=i.modified)})}),await this.saveTranslationsToLocal(e,a)}this.lastSubmitTime=Date.now()}finally{this.isSubmitting=!1}},exportTranslations(e,a,t,s,n=!1,o=!1){let r=this.translations;n?r=this.translations.filter(d=>d.translated):o&&(r=this.translations.filter(d=>!d.translated));let i="",l=`${s}_${a}_translations`,u="";switch(e){case"json":const d={meta:{system:s,language:a,languageName:t,exportDate:new Date().toISOString(),totalStrings:r.length},translations:r.map(c=>({key:c.key,original:c.original,translation:c.translation||"",translated:c.translated,catalogue:c.catalogue}))};i=JSON.stringify(d,null,2),l+=".json",u="application/json";break;case"json-kv":const h=r.filter(c=>c.translated&&c.original!==c.translation).reduce((c,f)=>(c[f.key]=f.translation,c),{});i=JSON.stringify(h,null,2),l+="_kv.json",u="application/json";break;case"csv":i=`Original,Translation,Catalogue,Status
`,r.forEach(c=>{const f=c.original.replace(/"/g,'""'),g=(c.translation||"").replace(/"/g,'""'),m=c.translated?"translated":"untranslated";i+=`"${f}","${g}","${c.catalogue}","${m}"
`}),l+=".csv",u="text/csv";break;case"po":i=`# Translations for ${s}
`,i+=`# Language: ${t}
`,i+=`msgid ""
`,i+=`msgstr ""
`,i+=`"Content-Type: text/plain; charset=UTF-8\\n"
`,i+=`"Language: ${a}\\n"

`,r.forEach(c=>{i+=`#: ${c.catalogue}
`,i+=`msgid "${c.original.replace(/"/g,'\\"')}"
`,i+=`msgstr "${(c.translation||"").replace(/"/g,'\\"')}"

`}),l+=".po",u="text/plain";break}return{content:i,filename:l,mimeType:u}},downloadExport(e,a,t,s,n=!1,o=!1){const{content:r,filename:i,mimeType:l}=this.exportTranslations(e,a,t,s,n,o),u=new Blob([r],{type:l}),d=URL.createObjectURL(u),h=document.createElement("a");h.href=d,h.download=i,document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(d)}}});export{k as u};
//# sourceMappingURL=Cz3oM3EE.js.map

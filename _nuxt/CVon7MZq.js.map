{"version":3,"mappings":";wwBAiFA,MAAMA,EAAQC,EAAA,EACRC,EAASC,EAAA,EACTC,EAAeC,EAAA,EACfC,EAAYC,EAAgB,EAAE,EAC9BC,EAAaD,EAAI,EAAE,EAGnBE,EAA8B,CAClC,CACE,KAAM,KACN,KAAM,UACN,kBAAmB,IACnB,gBAAiB,IACjB,aAAc,KACd,kBAAmB,KACnB,oBAAqB,GAEvB,CACE,KAAM,KACN,KAAM,UACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,KACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,SACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,KACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,SACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,KACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,UACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,IACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,aACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,KACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,UACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,IACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,WACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,IACnB,oBAAqB,KAEvB,CACE,KAAM,KACN,KAAM,UACN,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,KACd,kBAAmB,IACnB,oBAAqB,IACvB,EAGIC,EAAa,MAAOC,GAAqB,CAC7C,MAAMP,EAAa,YAAY,MAAOQ,GAAmB,CACvD,GAAI,CACFA,EAAe,GAAI,+BAA+B,EAClD,QAAQ,IAAI,kBAAmBD,CAAQ,EAGvC,MAAME,EAAqB,MAAAC,EAAA,IAAM,OAAO,eAA6B,4CACrEN,EAAW,MAAQ,MAAMK,EAAmB,cAAcF,CAAQ,EAClE,QAAQ,IAAI,sBAAuBH,EAAW,KAAK,EAEnDI,EAAe,IAAK,WAAW,EAG/B,MAAM,IAAI,QAASG,GAAY,WAAWA,EAAS,GAAG,CAAC,EAGvDT,EAAU,MAAQG,CACpB,OAASO,EAAO,CACd,QAAQ,MAAM,yBAA0BA,EAAO,gBAAiBL,CAAQ,EAExEH,EAAW,MAAQG,EACnBL,EAAU,MAAQG,CACpB,CACF,EAAG,iBAAiB,CACtB,EAEMQ,EAAyB,SAAY,CACzC,MAAMN,EAAWX,EAAM,OAAO,OAG9B,GAFA,QAAQ,IAAI,uBAAwB,CAAE,SAAAW,EAAU,KAAMX,EAAM,KAAM,EAE9D,CAACW,EAAU,CACb,QAAQ,IAAI,oDAAoD,EAChET,EAAO,KAAK,GAAG,EACf,MACF,CAEA,MAAMQ,EAAWC,CAAQ,CAC3B,EAEAO,EAAUD,CAAsB,EAGhCE,EACE,IAAMnB,EAAM,OAAO,OACnB,SAAY,CACV,MAAMiB,EAAA,CACR,GAGF,MAAMG,EAAS,IAAM,CACnBlB,EAAO,KAAK,GAAG,CACjB,EAEMmB,EAAkBC,GAAqB,CAC3C,MAAMX,EAAWX,EAAM,OAAO,OAC9BE,EAAO,KAAK,cAAc,mBAAmBS,CAAQ,CAAC,IAAIW,CAAQ,EAAE,CACtE,0BApOE,OAAAC,EAAA,EAAAC,EAyDM,MAzDNC,EAyDM,CAxDJC,EAAyCC,EAAA,CAAzB,MAAM,iBAAgB,EAG1BC,EAAAxB,CAAA,EAAa,wBAAzBoB,EAoDM,MAAAK,EAAA,CAnDJC,EAIM,MAJNC,EAIM,CAHJD,EAAmE,UAA1D,QAAOV,EAAQ,MAAM,eAAc,gBAAc,EAC1DY,EAAA,KAAAA,EAAA,GAAAF,EAAwB,UAApB,kBAAe,KACRtB,EAAA,OAAXe,EAAA,EAAAC,EAA2E,MAA3ES,EAA2C,cAAYzB,EAAA,KAAU,iBAGnEsB,EAwCM,MAxCNI,EAwCM,QAvCJV,EAsCMW,EAAA,KAAAC,EAtCc9B,EAAA,MAAR+B,QAAZb,EAsCM,OAtC0B,IAAKa,EAAK,KAAM,MAAM,gBAAiB,QAAKC,IAAEjB,EAAegB,EAAK,IAAI,IACpGP,EAGM,MAHNS,EAGM,CAFJT,EAAwB,UAAAU,EAAjBH,EAAK,IAAI,KAChBP,EAAkD,OAAlDW,EAAkDD,EAAnBH,EAAK,IAAI,OAG1CP,EA+BM,MA/BNY,EA+BM,CA9BJZ,EAMM,MANNa,EAMM,CALJX,EAAA,KAAAA,EAAA,GAAAF,EAA2C,QAArC,MAAM,cAAa,cAAW,KACpCA,EAGM,MAHNc,EAGM,CAFJd,EAA6F,OAAxF,MAAM,2BAA4B,MAAKe,EAAA,OAAWR,EAAK,kBAAiB,eAC7EP,EAAgE,OAAhEgB,EAAgEN,EAAjCH,EAAK,iBAAiB,EAAG,IAAC,OAI7DP,EAMM,MANNiB,EAMM,CALJf,EAAA,KAAAA,EAAA,GAAAF,EAAyC,QAAnC,MAAM,cAAa,YAAS,KAClCA,EAGM,MAHNkB,EAGM,CAFJlB,EAAyF,OAApF,MAAM,yBAA0B,MAAKe,EAAA,OAAWR,EAAK,gBAAe,eACzEP,EAA8D,OAA9DmB,EAA8DT,EAA/BH,EAAK,eAAe,EAAG,IAAC,OAI3DP,EAaM,MAbNoB,EAaM,CAZJpB,EAGM,MAHNqB,EAGM,CAFJrB,EAAuD,OAAvDsB,EAAuDZ,EAA3BH,EAAK,YAAY,KAC7CL,EAAA,KAAAA,EAAA,GAAAF,EAAgD,QAA1C,MAAM,iBAAgB,gBAAa,OAE3CA,EAGM,MAHNuB,EAGM,CAFJvB,EAA4D,OAA5DwB,EAA4Dd,EAAhCH,EAAK,iBAAiB,KAClDL,EAAA,KAAAA,EAAA,GAAAF,EAA6C,QAAvC,MAAM,iBAAgB,aAAU,OAExCA,EAGM,MAHNyB,GAGM,CAFJzB,EAA8D,OAA9D0B,GAA8DhB,EAAlCH,EAAK,mBAAmB,KACpDL,EAAA,KAAAA,EAAA,GAAAF,EAA+C,QAAzC,MAAM,iBAAgB,eAAY,2BAOvCxB,EAAA,MAAU,SAAM,OAA3BkB,EAEM,MAFNiC,GAAwD,4DAExD","names":["route","useRoute","router","useRouter","loadingStore","useLoadingStore","languages","ref","systemName","sampleLanguages","loadSystem","systemId","updateProgress","translationSources","__vitePreload","resolve","error","initializeLanguagePage","onMounted","watch","goHome","selectLanguage","langCode","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_LoadingOverlay","_unref","_hoisted_2","_createElementVNode","_hoisted_3","_cache","_hoisted_4","_hoisted_5","_Fragment","_renderList","lang","$event","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeStyle","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23"],"ignoreList":[],"sources":["../../../../../../../pages/languages/[system].vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <LoadingOverlay title=\"Loading System\" />\n\n    <!-- Main content -->\n    <div v-if=\"!loadingStore.isLoading\">\n      <div class=\"header\">\n        <button @click=\"goHome\" class=\"back-button\">‚Üê Back to Home</button>\n        <h1>Select Language</h1>\n        <div v-if=\"systemName\" class=\"system-info\"> System: {{ systemName }} </div>\n      </div>\n\n      <div class=\"languages-grid\">\n        <div v-for=\"lang in languages\" :key=\"lang.code\" class=\"language-card\" @click=\"selectLanguage(lang.code)\">\n          <div class=\"language-header\">\n            <h3>{{ lang.name }}</h3>\n            <span class=\"language-code\">{{ lang.code }}</span>\n          </div>\n\n          <div class=\"stats-container\">\n            <div class=\"stat-row\">\n              <span class=\"stat-label\">Translated:</span>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill translated\" :style=\"{ width: lang.translatedPercent + '%' }\"></div>\n                <span class=\"progress-text\">{{ lang.translatedPercent }}%</span>\n              </div>\n            </div>\n\n            <div class=\"stat-row\">\n              <span class=\"stat-label\">Reviewed:</span>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill reviewed\" :style=\"{ width: lang.reviewedPercent + '%' }\"></div>\n                <span class=\"progress-text\">{{ lang.reviewedPercent }}%</span>\n              </div>\n            </div>\n\n            <div class=\"stat-details\">\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.totalStrings }}</span>\n                <span class=\"stat-sublabel\">Total strings</span>\n              </div>\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.translatedStrings }}</span>\n                <span class=\"stat-sublabel\">Translated</span>\n              </div>\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.untranslatedStrings }}</span>\n                <span class=\"stat-sublabel\">Untranslated</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"languages.length === 0\" class=\"no-languages\">\n        No languages available. Please load a game system first.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useLoadingStore } from \"~/stores/loadingStore\";\n\n// Explicitly disable layout for this page to prevent conflicts with translate layout\ndefinePageMeta({\n  layout: false\n});\n\ninterface Language {\n  code: string;\n  name: string;\n  translatedPercent: number;\n  reviewedPercent: number;\n  totalStrings: number;\n  translatedStrings: number;\n  untranslatedStrings: number;\n}\n\nconst route = useRoute();\nconst router = useRouter();\nconst loadingStore = useLoadingStore();\nconst languages = ref<Language[]>([]);\nconst systemName = ref(\"\");\n\n// Sample languages data - this should be populated from actual translation data\nconst sampleLanguages: Language[] = [\n  {\n    code: \"en\",\n    name: \"English\",\n    translatedPercent: 100,\n    reviewedPercent: 100,\n    totalStrings: 1500,\n    translatedStrings: 1500,\n    untranslatedStrings: 0,\n  },\n  {\n    code: \"es\",\n    name: \"Spanish\",\n    translatedPercent: 85,\n    reviewedPercent: 72,\n    totalStrings: 1500,\n    translatedStrings: 1275,\n    untranslatedStrings: 225,\n  },\n  {\n    code: \"fr\",\n    name: \"French\",\n    translatedPercent: 92,\n    reviewedPercent: 85,\n    totalStrings: 1500,\n    translatedStrings: 1380,\n    untranslatedStrings: 120,\n  },\n  {\n    code: \"de\",\n    name: \"German\",\n    translatedPercent: 78,\n    reviewedPercent: 65,\n    totalStrings: 1500,\n    translatedStrings: 1170,\n    untranslatedStrings: 330,\n  },\n  {\n    code: \"it\",\n    name: \"Italian\",\n    translatedPercent: 65,\n    reviewedPercent: 45,\n    totalStrings: 1500,\n    translatedStrings: 975,\n    untranslatedStrings: 525,\n  },\n  {\n    code: \"pt\",\n    name: \"Portuguese\",\n    translatedPercent: 70,\n    reviewedPercent: 60,\n    totalStrings: 1500,\n    translatedStrings: 1050,\n    untranslatedStrings: 450,\n  },\n  {\n    code: \"ru\",\n    name: \"Russian\",\n    translatedPercent: 55,\n    reviewedPercent: 40,\n    totalStrings: 1500,\n    translatedStrings: 825,\n    untranslatedStrings: 675,\n  },\n  {\n    code: \"ja\",\n    name: \"Japanese\",\n    translatedPercent: 45,\n    reviewedPercent: 30,\n    totalStrings: 1500,\n    translatedStrings: 675,\n    untranslatedStrings: 825,\n  },\n  {\n    code: \"zh\",\n    name: \"Chinese\",\n    translatedPercent: 40,\n    reviewedPercent: 25,\n    totalStrings: 1500,\n    translatedStrings: 600,\n    untranslatedStrings: 900,\n  },\n];\n\nconst loadSystem = async (systemId: string) => {\n  await loadingStore.withLoading(async (updateProgress) => {\n    try {\n      updateProgress(30, \"Loading system information...\");\n      console.log(\"Loading system:\", systemId);\n      \n      // Get just the system name without loading full translations\n      const translationSources = await import(\"~/stores/translationSources\");\n      systemName.value = await translationSources.getSystemName(systemId);\n      console.log(\"System name loaded:\", systemName.value);\n\n      updateProgress(100, \"Complete!\");\n\n      // Small delay to show completion\n      await new Promise((resolve) => setTimeout(resolve, 300));\n\n      // Load languages\n      languages.value = sampleLanguages;\n    } catch (error) {\n      console.error(\"Failed to load system:\", error, \"for systemId:\", systemId);\n      // Don't redirect to home, just show error in console and use fallback name\n      systemName.value = systemId; // Fallback to systemId as name\n      languages.value = sampleLanguages;\n    }\n  }, \"Initializing...\");\n};\n\nconst initializeLanguagePage = async () => {\n  const systemId = route.params.system as string;\n  console.log(\"Languages page init:\", { systemId, path: route.path });\n\n  if (!systemId) {\n    console.log(\"No systemId in languages page, redirecting to home\");\n    router.push(\"/\");\n    return;\n  }\n\n  await loadSystem(systemId);\n};\n\nonMounted(initializeLanguagePage);\n\n// Watch for route changes to handle keepalive navigation\nwatch(\n  () => route.params.system,\n  async () => {\n    await initializeLanguagePage();\n  }\n);\n\nconst goHome = () => {\n  router.push(\"/\");\n};\n\nconst selectLanguage = (langCode: string) => {\n  const systemId = route.params.system as string;\n  router.push(`/translate/${encodeURIComponent(systemId)}/${langCode}`);\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.header {\n  margin-bottom: 2rem;\n  text-align: center;\n  position: relative;\n}\n\n.back-button {\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  padding: 0.5rem 1rem;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n}\n\n.system-info {\n  color: #666;\n  margin-top: 0.5rem;\n}\n\n.languages-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 1.5rem;\n}\n\n.language-card {\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 1.5rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.language-card:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n.language-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.language-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.language-code {\n  background: #f0f0f0;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  font-family: monospace;\n}\n\n.stats-container {\n  margin-top: 1rem;\n}\n\n.stat-row {\n  margin-bottom: 0.75rem;\n}\n\n.stat-label {\n  display: block;\n  font-size: 0.875rem;\n  color: #666;\n  margin-bottom: 0.25rem;\n}\n\n.progress-bar {\n  position: relative;\n  height: 20px;\n  background: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.translated {\n  background: #4caf50;\n}\n\n.progress-fill.reviewed {\n  background: #2196f3;\n}\n\n.progress-text {\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: #333;\n}\n\n.stat-details {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.5rem;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e0e0e0;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  display: block;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.stat-sublabel {\n  display: block;\n  font-size: 0.75rem;\n  color: #666;\n  margin-top: 0.25rem;\n}\n\n.no-languages {\n  text-align: center;\n  padding: 4rem 2rem;\n  color: #666;\n}\n\nh1 {\n  margin: 0;\n  font-size: 2rem;\n}\n</style>\n"],"file":"_nuxt/CVon7MZq.js"}
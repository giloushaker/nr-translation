{"version":3,"mappings":"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","names":["route","useRoute","router","useRouter","loadingStore","useLoadingStore","translationStore","useTranslationStore","languages","ref","systemName","defaultLanguageCodes","generateDefaultLanguages","lang","generateLanguageData","systemId","backendStats","langStats","totalStrings","translatedStrings","reviewedStrings","untranslatedStrings","loadSystem","updateProgress","translationSources","__vitePreload","error","resolve","initializeLanguagePage","onMounted","watch","goHome","selectLanguage","langCode","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_LoadingOverlay","_unref","_hoisted_2","_createElementVNode","_hoisted_3","_cache","_hoisted_4","_hoisted_5","_Fragment","_renderList","$event","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeStyle","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23"],"ignoreList":[],"sources":["../../../../../../../pages/languages/[system].vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <LoadingOverlay title=\"Loading System\" />\n\n    <!-- Main content -->\n    <div v-if=\"!loadingStore.isLoading\">\n      <div class=\"header\">\n        <button @click=\"goHome\" class=\"back-button\">‚Üê Back to Home</button>\n        <h1>Select Language</h1>\n        <div v-if=\"systemName\" class=\"system-info\"> System: {{ systemName }} </div>\n      </div>\n\n      <div class=\"languages-grid\">\n        <div v-for=\"lang in languages\" :key=\"lang.code\" class=\"language-card\" @click=\"selectLanguage(lang.code)\">\n          <div class=\"language-header\">\n            <h3>{{ lang.name }}</h3>\n            <span class=\"language-code\">{{ lang.code }}</span>\n          </div>\n\n          <div class=\"stats-container\">\n            <div class=\"stat-row\">\n              <span class=\"stat-label\">Translated:</span>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill translated\" :style=\"{ width: lang.translatedPercent + '%' }\"></div>\n                <span class=\"progress-text\">{{ lang.translatedPercent }}%</span>\n              </div>\n            </div>\n\n            <div class=\"stat-row\">\n              <span class=\"stat-label\">Reviewed:</span>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill reviewed\" :style=\"{ width: lang.reviewedPercent + '%' }\"></div>\n                <span class=\"progress-text\">{{ lang.reviewedPercent }}%</span>\n              </div>\n            </div>\n\n            <div class=\"stat-details\">\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.totalStrings }}</span>\n                <span class=\"stat-sublabel\">Total strings</span>\n              </div>\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.translatedStrings }}</span>\n                <span class=\"stat-sublabel\">Translated</span>\n              </div>\n              <div class=\"stat-item\">\n                <span class=\"stat-value\">{{ lang.untranslatedStrings }}</span>\n                <span class=\"stat-sublabel\">Untranslated</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"languages.length === 0\" class=\"no-languages\">\n        No languages available. Please load a game system first.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useLoadingStore } from \"~/stores/loadingStore\";\nimport { useTranslationStore } from \"~/stores/translationStore\";\n\n// Explicitly disable layout for this page to prevent conflicts with translate layout\ndefinePageMeta({\n  layout: false,\n});\n\ninterface Language {\n  code: string;\n  name: string;\n  translatedPercent: number;\n  reviewedPercent: number;\n  totalStrings: number;\n  translatedStrings: number;\n  untranslatedStrings: number;\n}\n\nconst route = useRoute();\nconst router = useRouter();\nconst loadingStore = useLoadingStore();\nconst translationStore = useTranslationStore();\nconst languages = ref<Language[]>([]);\nconst systemName = ref(\"\");\n\n// Default language list\nconst defaultLanguageCodes = [\n  { code: \"en\", name: \"English\" },\n  { code: \"es\", name: \"Spanish\" },\n  { code: \"fr\", name: \"French\" },\n  { code: \"de\", name: \"German\" },\n  { code: \"it\", name: \"Italian\" },\n  { code: \"pt\", name: \"Portuguese\" },\n  { code: \"ru\", name: \"Russian\" },\n  { code: \"ja\", name: \"Japanese\" },\n  { code: \"zh\", name: \"Chinese\" },\n];\n\n// Helper function to generate default language data (all zeros)\nconst generateDefaultLanguages = (): Language[] => {\n  return defaultLanguageCodes.map((lang) => ({\n    code: lang.code,\n    name: lang.name,\n    translatedPercent: 0,\n    reviewedPercent: 0,\n    totalStrings: 0,\n    translatedStrings: 0,\n    untranslatedStrings: 0,\n  }));\n};\n\n// Helper function to generate language data from backend stats or defaults\nconst generateLanguageData = async (systemId: string, backendStats: any): Promise<Language[]> => {\n  return defaultLanguageCodes.map((lang) => {\n    // Check if backend has stats for this language\n    const langStats = backendStats?.languages?.[lang.code];\n\n    if (langStats) {\n      const totalStrings = langStats.total || 0;\n      const translatedStrings = langStats.translated || 0;\n      const reviewedStrings = langStats.reviewed || 0;\n      const untranslatedStrings = totalStrings - translatedStrings;\n\n      return {\n        code: lang.code,\n        name: lang.name,\n        translatedPercent: totalStrings > 0 ? Math.round((translatedStrings / totalStrings) * 100) : 0,\n        reviewedPercent: totalStrings > 0 ? Math.round((reviewedStrings / totalStrings) * 100) : 0,\n        totalStrings,\n        translatedStrings,\n        untranslatedStrings: Math.max(0, untranslatedStrings),\n      };\n    } else {\n      // No backend stats, return zeros\n      return {\n        code: lang.code,\n        name: lang.name,\n        translatedPercent: 0,\n        reviewedPercent: 0,\n        totalStrings: 0,\n        translatedStrings: 0,\n        untranslatedStrings: 0,\n      };\n    }\n  });\n};\n\nconst loadSystem = async (systemId: string) => {\n  await loadingStore.withLoading(async (updateProgress) => {\n    try {\n      updateProgress(20, \"Loading system information...\");\n      console.log(\"Loading system:\", systemId);\n\n      // Get just the system name without loading full translations\n      const translationSources = await import(\"~/stores/translationSources\");\n      systemName.value = await translationSources.getSystemName(systemId);\n      console.log(\"System name loaded:\", systemName.value);\n\n      updateProgress(50, \"Loading translation statistics...\");\n\n      // Try to get stats from backend if available\n      let backendStats = null;\n      if (translationStore.backend.isAvailable()) {\n        try {\n          console.log(\"Loading stats from backend for system:\", systemId);\n          backendStats = await translationStore.backend.getStats(systemId);\n          console.log(\"Backend stats loaded:\", backendStats);\n        } catch (error) {\n          console.warn(\"Failed to load stats from backend:\", error);\n        }\n      }\n\n      updateProgress(80, \"Preparing language data...\");\n\n      // Generate language list with backend stats or defaults\n      languages.value = await generateLanguageData(systemId, backendStats);\n\n      updateProgress(100, \"Complete!\");\n\n      // Small delay to show completion\n      await new Promise((resolve) => setTimeout(resolve, 300));\n    } catch (error) {\n      console.error(\"Failed to load system:\", error, \"for systemId:\", systemId);\n      // Don't redirect to home, just show error in console and use fallback name\n      systemName.value = systemId; // Fallback to systemId as name\n      languages.value = generateDefaultLanguages();\n    }\n  }, \"Initializing...\");\n};\n\nconst initializeLanguagePage = async () => {\n  const systemId = route.params.system as string;\n  console.log(\"Languages page init:\", { systemId, path: route.path });\n\n  if (!systemId) {\n    console.log(\"No systemId in languages page, redirecting to home\");\n    router.push(\"/\");\n    return;\n  }\n\n  await loadSystem(systemId);\n};\n\nonMounted(initializeLanguagePage);\n\n// Watch for route changes to handle keepalive navigation\nwatch(\n  () => route.params.system,\n  async () => {\n    await initializeLanguagePage();\n  }\n);\n\nconst goHome = () => {\n  router.push(\"/\");\n};\n\nconst selectLanguage = (langCode: string) => {\n  const systemId = route.params.system as string;\n  router.push(`/translate/${encodeURIComponent(systemId)}/${langCode}`);\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.header {\n  margin-bottom: 2rem;\n  text-align: center;\n  position: relative;\n}\n\n.back-button {\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  padding: 0.5rem 1rem;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n}\n\n.system-info {\n  color: #666;\n  margin-top: 0.5rem;\n}\n\n.languages-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 1.5rem;\n}\n\n.language-card {\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 1.5rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.language-card:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n.language-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.language-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.language-code {\n  background: #f0f0f0;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  font-family: monospace;\n}\n\n.stats-container {\n  margin-top: 1rem;\n}\n\n.stat-row {\n  margin-bottom: 0.75rem;\n}\n\n.stat-label {\n  display: block;\n  font-size: 0.875rem;\n  color: #666;\n  margin-bottom: 0.25rem;\n}\n\n.progress-bar {\n  position: relative;\n  height: 20px;\n  background: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.translated {\n  background: #4caf50;\n}\n\n.progress-fill.reviewed {\n  background: #2196f3;\n}\n\n.progress-text {\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: #333;\n}\n\n.stat-details {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.5rem;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e0e0e0;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  display: block;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.stat-sublabel {\n  display: block;\n  font-size: 0.75rem;\n  color: #666;\n  margin-top: 0.25rem;\n}\n\n.no-languages {\n  text-align: center;\n  padding: 4rem 2rem;\n  color: #666;\n}\n\nh1 {\n  margin: 0;\n  font-size: 2rem;\n}\n</style>\n"],"file":"_nuxt/Bft-9V-A.js"}
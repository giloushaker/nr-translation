import{W as S,d as f,x as p,K as _,Q as c,y as L,z as l,A as d,R as w,_ as v}from"./CpzGuEEd.js";import{G as h,g as b,i as x,c as N}from"./hOP14oPP.js";const z=S("loading",{state:()=>({isLoading:!1,message:"Initializing...",progress:0}),actions:{startLoading(t="Loading..."){this.isLoading=!0,this.message=t,this.progress=0},updateProgress(t,s){this.progress=Math.max(0,Math.min(100,t)),s&&(this.message=s)},updateMessage(t){this.message=t},stopLoading(){this.isLoading=!1,this.message="Initializing...",this.progress=0},async withLoading(t,s="Loading..."){this.startLoading(s);try{return await t((e,o)=>{this.updateProgress(e,o)})}finally{this.stopLoading()}}}}),C={key:0,class:"loading-overlay"},F={class:"loading-content"},M={class:"loading-message"},G={class:"progress-container"},E={class:"progress-bar"},O={class:"progress-text"},$=f({__name:"LoadingOverlay",props:{title:{default:"Loading"}},setup(t){const s=z();return(a,e)=>c(s).isLoading?(L(),p("div",C,[l("div",F,[l("h2",null,d(a.title),1),l("div",M,d(c(s).message),1),l("div",G,[l("div",E,[l("div",{class:"progress-fill",style:w({width:c(s).progress+"%"})},null,4)]),l("div",O,d(c(s).progress)+"%",1)])])])):_("",!0)}}),D=Object.assign(v($,[["__scopeId","data-v-8c95929b"]]),{__name:"LoadingOverlay"}),H=S("system",{state:()=>({currentSystem:null,systemName:"",isLoaded:!1}),getters:{gameSystem:t=>t.currentSystem?.gameSystem,hasSystem:t=>t.isLoaded&&t.currentSystem?.gameSystem},actions:{async loadSystem(t,s){const a=s||(()=>{});try{t.includes("/")?await this.loadGitHubSystem(t,a):await this.loadLocalSystem(t,a),globalThis.system=this.currentSystem,this.isLoaded=!0}catch(e){throw console.error("Failed to load system:",e),this.currentSystem=null,this.systemName="",this.isLoaded=!1,e}},async loadGitHubSystem(t,s){const[a,e]=t.split("/");s(10,`Connecting to GitHub repository ${a}/${e}...`);const o=new h;s(20,"Downloading repository files...");const i=await b(a,e);s(40,"Processing game system files...");const n=i.length;let m=0;for(const[g,y]of i){if(y.isDirectory||!x(g)){m++;continue}const u=await y.text(),r=await N(u,g);r.gameSystem?(await o.setSystem(r),this.systemName=r.gameSystem.name,s(40+Math.floor(m/n*50),`Loading ${r.gameSystem.name}...`)):r.catalogue&&await o.setCatalogue(r),m++,s(40+Math.floor(m/n*50))}s(95,"Finalizing..."),this.currentSystem=o},async loadLocalSystem(t,s){s(20,"Loading local system...");const e=JSON.parse(localStorage.getItem("nr-translation-local-systems")||"[]").find(i=>i.id===t);if(!e)throw new Error("System not found");const o=new h;if(s(50,`Loading ${e.name}...`),e.data.gameSystem&&(await o.setSystem(e.data.gameSystem),this.systemName=e.name),s(70,"Loading catalogues..."),e.data.catalogues){const i=e.data.catalogues.length;for(let n=0;n<i;n++)await o.setCatalogue(e.data.catalogues[n]),s(70+Math.floor(n/i*20))}s(95,"Finalizing..."),this.currentSystem=o},async ensureSystemLoaded(t,s){this.isLoaded&&this.currentSystem?.gameSystem||await this.loadSystem(t,s)},clearSystem(){this.currentSystem=null,this.systemName="",this.isLoaded=!1,globalThis.system=null}}});export{D as _,H as a,z as u};
//# sourceMappingURL=DlJpEC_N.js.map
